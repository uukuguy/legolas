
#user  nobody;
worker_processes  2;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
error_log  logs/error.log  debug;

#pid        logs/nginx.pid;


events {
       use epoll;
       worker_connections  51200; 
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    log_format    access    '$remote_addr - $remote_user [$time_local] "$request" ' ' $status $body_bytes_sent "$http_referer" ' ' "$http_user_agent" $http_x_forwarded_for';

    #access_log  logs/access.log  main;

    sendfile        off; # off - heavy disk IO app like download
    #tcp_nopush     on;
    keepalive_timeout  120;
    tcp_nodelay on;

    #gzip  on;
    #gzip_min_length 1100;
    #gzip_buffers 4 8k;
    #gzip_types text/plain;

    # fastcgi_connect_timeout 300;
    # fastcgi_send_timeout 300;
    # fastcgi_read_timeout 300;
    # fastcgi_buffer_size 64k;
    # fastcgi_buffers 4 64k;
    # fastcgi_busy_buffers_size 128k;
    # fastcgi_temp_file_write_size 128k;
  

    #size limits
    #client_max_body_size             300m;
    #client_body_buffer_size        256k;
    #client_header_timeout     3m;
    #client_body_timeout 3m;
    #send_timeout             3m;

    upstream everdata {
        server 127.0.0.1:18088;
    }

    server {
        listen       18086;
        server_name  localhost;

        client_max_body_size 2g;
        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        uds_host localhost;
        uds_port 18086;
        uds_uri /miniuds;
        #uds_prefix http://localhost:18090;

        location /udsfs/uploadfile {
            #udbroker;
            # Pass altered request body to this location
            upload_pass   @test;

            # Store files to this directory
            # The directory is hashed, subdirectories 0 1 2 3 4 5 6 7 8 9 should exist
            upload_store /home/jwsu/tmp 1;
            
            # Allow uploaded files to be read only by user
            upload_store_access user:r;

            # Set specified fields in request body
            upload_set_form_field "${upload_field_name}_name" $upload_file_name;
            upload_set_form_field "${upload_field_name}_content_type" $upload_content_type;
            upload_set_form_field "${upload_field_name}_path" $upload_tmp_path;

            # Inform backend about hash and size of a file
            upload_aggregate_form_field "${upload_field_name}_md5" $upload_file_md5;
            upload_aggregate_form_field "${upload_field_name}_size" $upload_file_size;

            upload_pass_form_field "^submit$|^description$";
        }

        # Pass altered request body to a backend
        location @test {
            proxy_pass   http://localhost:8080;
        }

        location ~ /miniuds$ {
            miniuds;
        }

        #location ~ \.flv$ {
            #flv;
            #access_log on;
            #limit_rate_after 1m; # rate speed after downloaded 1M.
            #limit_rate 100k;     # rate speed to 100k
        #}

        location ~ /udsproxy$ {
            udsproxy;

            access_log off;
            limit_rate_after 1m; # rate speed after downloaded 1M.
            limit_rate 100k;     # rate speed to 100k
        }

        #location ~ /flvplay$ {
        #location ~ /Contextpath/ {
            #flvplay;

            #access_log on;
            #limit_rate_after 1m; # rate speed after downloaded 1M.
            #limit_rate 100k;     # rate speed to 100k
        #}

        location / {

            # fastcgi_pass 127.0.0.1:8087;
            
            # fastcgi_param SERVER_SOFTWARE nginx;
            # fastcgi_param QUERY_STRING $query_string;
            # fastcgi_param REQUEST_METHOD $request_method;
            # fastcgi_param CONTENT_TYPE $content_type;
            # fastcgi_param CONTENT_LENGTH $content_length;

            # fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            # fastcgi_param SCRIPT_NAME $fastcgi_script_name;
            # fastcgi_param REQUEST_URI $request_uri;
            # fastcgi_param DOCUMENT_URI $document_uri;
            # fastcgi_param SERVER_PROTOCOL $server_protocol;

            # fastcgi_param REMOTE_ADDR $remote_addr;
            # fastcgi_param REMOTE_PORT $remote_port;
            # fastcgi_param SERVER_ADDR $server_addr;
            # fastcgi_param SERVER_PORT $server_port;
            # fastcgi_param SERVER_NAME $server_name;
            
            root   html;
            index  index.html index.htm;
        }

        #location ~ ^/(js|css|ckplayer)/ {
            #root html;
            ##expires 30d;
        #}

        #location /NginxStatus {
            #stub_status on;
            #access_log on;
            #auth_basic "NginxStatus";
            #auth_basic_user_file conf/htpasswd;
        #}

        location ~ ^.ht {
            deny all;
        }

        #location /udcloud {
            #udcloud "Hello udcloud!";
        #}
        
        location /services/IFileService {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header REMOTE-HOST $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://127.0.0.1:18091;
        }

        location /services/IDispatchFileService {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header REMOTE-HOST $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://127.0.0.1:18092;
        }

        location /services/IFolderWebService {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header REMOTE-HOST $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://127.0.0.1:18093;
        }

        location /services/ISearchWebService {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header REMOTE-HOST $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://127.0.0.1:18094;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443;
    #    server_name  localhost;

    #    ssl                  on;
    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_timeout  5m;

    #    ssl_protocols  SSLv2 SSLv3 TLSv1;
    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers   on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
